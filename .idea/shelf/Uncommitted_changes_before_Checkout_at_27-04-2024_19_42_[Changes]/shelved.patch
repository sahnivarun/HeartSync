Index: server.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express');\r\nconst sqlite3 = require('sqlite3').verbose();\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// Connect to the SQLite database\r\nconst db = new sqlite3.Database('users.db');\r\n\r\n// Middleware to parse JSON request bodies\r\napp.use(express.json());\r\n\r\n// Endpoint to handle login requests\r\napp.post('/login', (req, res) => {\r\n    const { username, password } = req.body;\r\n\r\n    // Query the database to check if the username and password match\r\n    const query = `SELECT * FROM users WHERE username = ? AND password = ?`;\r\n    db.get(query, [username, password], (err, row) => {\r\n        if (err) {\r\n            console.error(err);\r\n            res.status(500).send('Internal Server Error');\r\n        } else if (!row) {\r\n            // No user found with the provided username and password\r\n            res.status(401).send('Incorrect username or password');\r\n        } else {\r\n            // User found, send success response\r\n            res.status(200).send('Login successful');\r\n        }\r\n    });\r\n});\r\n\r\n// Start the server\r\napp.listen(port, () => {\r\n    console.log(`Server is running on port ${port}`);\r\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server.js b/server.js
--- a/server.js	(revision 0c2ddafacfd5a9c61b6c1ab17c1ed008382ff1c7)
+++ b/server.js	(date 1714262694814)
@@ -1,36 +1,36 @@
-const express = require('express');
-const sqlite3 = require('sqlite3').verbose();
-
-const app = express();
-const port = 3000;
-
-// Connect to the SQLite database
-const db = new sqlite3.Database('users.db');
-
-// Middleware to parse JSON request bodies
-app.use(express.json());
-
-// Endpoint to handle login requests
-app.post('/login', (req, res) => {
-    const { username, password } = req.body;
-
-    // Query the database to check if the username and password match
-    const query = `SELECT * FROM users WHERE username = ? AND password = ?`;
-    db.get(query, [username, password], (err, row) => {
-        if (err) {
-            console.error(err);
-            res.status(500).send('Internal Server Error');
-        } else if (!row) {
-            // No user found with the provided username and password
-            res.status(401).send('Incorrect username or password');
-        } else {
-            // User found, send success response
-            res.status(200).send('Login successful');
-        }
-    });
-});
-
-// Start the server
-app.listen(port, () => {
-    console.log(`Server is running on port ${port}`);
-});
\ No newline at end of file
+// const express = require('express');
+// const sqlite3 = require('sqlite3').verbose();
+//
+// const app = express();
+// const port = 3000;
+//
+// // Connect to the SQLite database
+// const db = new sqlite3.Database('users.db');
+//
+// // Middleware to parse JSON request bodies
+// app.use(express.json());
+//
+// // Endpoint to handle login requests
+// app.post('/login', (req, res) => {
+//     const { username, password } = req.body;
+//
+//     // Query the database to check if the username and password match
+//     const query = `SELECT * FROM users WHERE username = ? AND password = ?`;
+//     db.get(query, [username, password], (err, row) => {
+//         if (err) {
+//             console.error(err);
+//             res.status(500).send('Internal Server Error');
+//         } else if (!row) {
+//             // No user found with the provided username and password
+//             res.status(401).send('Incorrect username or password');
+//         } else {
+//             // User found, send success response
+//             res.status(200).send('Login successful');
+//         }
+//     });
+// });
+//
+// // Start the server
+// app.listen(port, () => {
+//     console.log(`Server is running on port ${port}`);
+// });
\ No newline at end of file
